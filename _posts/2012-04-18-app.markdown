---
layout: default
title: Hướng dẫn làm ứng dụng Rails Girls
permalink: app
---

# Hướng dẫn làm ứng dụng Rails Girls

*Viêt bởi Vesa Vänskä, [@vesan](https://twitter.com/vesan)*

**Hãy chắc chắn rằng bạn đã cài đặt Rails.** Nếu chưa cài, hãy làm theo hướng dẫn [**hướng dẫn ở đây**](install.md).

## Làm quen với các công cụ

<div class="indent" markdown="1">

<h3><i class="icon-text-editor">&nbsp;</i></h3>

### Trình soạn thảo

-  [Atom](https://atom.io/), [Sublime Text](http://www.sublimetext.com), Vim và Emacs là một số trình soạn thảo bạn có thể sử dụng cho việc viết mã và chỉnh sửa tập tin.

<h3><i class="icon-prompt">&nbsp;</i></h3>

### Terminal (hay Command Prompt trên Windows)

- Nơi bạn khởi động rails server hay chạy lệnh.

<h3><i class="icon-browser">&nbsp;</i></h3>

### Trình duyệt

- (Firefox, Safari, Chrome) để xem ứng dụng của bạn.

### Chú ý

Bạn cần chú ý lựa chọn chỉ dẫn chính xác cho hệ điều hành của mình - các lệnh cần chạy trên Windows sẽ khác một chút so với Mac và Linux. Lưu ý những chỗ có chú thích riêng cho Windows. Nếu bạn dùng một dịch-vụ đám-mây (như nitrous), bạn cần chạy các lệnh cho Linux ngay cả khi bạn đang dùng máy tính chạy trên Windows.

## *1.*Khởi tạo ứng dụng

Chúng ta sẽ khởi tạo một ứng dụng Rails mới với tên gọi *railsgirls*.

Trước hết, hãy mở terminal lên:

- Mac OS X: Mở Spotlight, nhập *Terminal* và nhấn vào ứng dụng *Terminal*.
- Windows: Nhấn Start và tìm *Command Prompt*, rồi nhấn vào *Command Prompt with Ruby on Rails*.
- Linux (Ubuntu/Fedora): Tìm *Terminal* trên bảng điều khiển và nhấn *Terminal*.
- Dịch-vụ đám-mây (như nitrous): Đăng nhập vào tài khoản, khởi động box của bạn và chuyển sang IDE (xem chi tiết ở [hướng dẫn cài đặt](/install.md#using-a-cloud-service)). Terminal thường nằm phía dưới cùng của cửa sổ trình duyệt.

Tiếp theo nhập các lệnh sau vào terminal:

{% highlight sh %}
mkdir projects
{% endhighlight %}

Bạn có thể xác nhận thư mục `projects` đã được tạo bằng cách chạy lệnh `ls` (`dir` cho Windows). Bạn có thể nhìn thấy tên thư mục `projects` hiện ra trên màn hình. Tiếp theo, bạn sẽ muốn chuyển thư mục hiện tại tới thư mục `projects` bằng lệnh:

{% highlight sh %}
cd projects
{% endhighlight %}

Bạn có thể xác nhận đang ở trong một thư mục rỗng bằng cách chạy lại lệnh `ls` (`dir` cho Windows). Bây giờ chúng ta sẽ khởi tạo một ứng dụng với tên là `railsgirls` với lệnh:

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

Lệnh này sẽ tạo ra một ứng dụng mới trong thư mục `railsgirls`, vì thế chúng ta sẽ chuyển thư mục hiện tại tới ứng dụng Rails này bằng lệnh:

{% highlight sh %}
cd railsgirls
{% endhighlight %}

Nếu bạn chạy lệnh `ls` (`dir` cho Windows) ở đây, bạn sẽ thấy các thư mục như `app` hay `config`. Bạn có thể khởi động rails server ngay bây giờ với lệnh:

{% highlight sh %}
rails server
{% endhighlight %}

Truy cập vào địa chỉ http://localhost:3000 từ trình duyệt. Nếu bạn sử dụng dịch-vụ đám-mây (như nitrous), hãy sử dụng tính năng xem trước (xem chi tiết ở [hướng dẫn cài đặt](install.md#using-a-cloud-service)).

Bạn sẽ thấy trang "Welcome aboard", thể hiện rằng việc khởi tạo ứng dụng hoạt động đúng như mong muốn.

Để ý thấy trên cửa sổ terminal không còn nhìn thấy command prompt vì bạn đang chạy Rails server, command prompt bây giờ trông như sau:

trên Windows

{% highlight sh %}
>
{% endhighlight %}

trên Mac và Linux

{% highlight sh %}
$
{% endhighlight %}

Khi command prompt không hiển thị, bạn không thể thực hiện các lệnh mới. Nếu bạn thử chạy `cd` hay một lệnh khác, nó sẽ không chạy. Để đưa command prompt về trạng thái bình thường:

Nhấn `CTRL-C` trong terminal để tắt server.

**Huấn luyện viên**: Giải thích ý nghĩa của mỗi lệnh. Những gì được tạo ra? Server làm những gì?

## *2.*Tạo scaffold cho Idea

Chúng ta sẽ dùng tính năng scaffold (tạo giàn) để tạo ra một điểm bắt đầu cho phép chúng ta liệt kê, thêm, xóa, sửa và xem các thứ; trong trường hộ này là idea.

**Huấn luyện viên**: Rails scaffolding là gì? (giải thích ý nghĩa của câu lệnh, tên model và bảng liên quan trong cơ sở dữ liệu, qui ước đặt tên, thuộc tính (attributes) và kiểu (type), v.v.)

{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
{% endhighlight %}

Quá trình scaffold sẽ tạo ra các tệp tin mới trong thư mục dự án. Sau đó chúng ta cần chạy thêm lệnh sau để cập nhật cơ sở dữ liệu và khởi động lại server:

trên Mac và Linux

{% highlight sh %}
bin/rake db:migrate
rails server
{% endhighlight %}

trên Windows

{% highlight sh %}
ruby bin/rake db:migrate
rails server
{% endhighlight %}

Truy cập http://localhost:3000/ideas trên trình duyệt. Người dùng dịch-vụ đám-mây (vd nitrous) cần thêm `/ideas` vào sau địa chỉ xem trước (xem [hướng dẫn cài đặt](/install.md#using-a-cloud-service))

Nhấn vào các liên kết mới xuất hiện trong ứng dụng xem chúng ta có gì sau khi chạy scaffold.

Nhấn `CTRL-C` trong terminal để tắt server khi bạn không còn dùng ứng dụng.

## *3.*Thiết kế

**Huấn luyện viên**: Nói về quan hệ giữa HTML và Rails. Phần nào trong `views` là HTML và phần nào là Embedded Ruby (ERB)? MVC là gì và nó có liên quan thế nào tới ứng dụng của chúng ta? (`models` và `controllers` chịu trách nhiệm cho việc tạo ra các HTML `views`)

Ứng dụng hiện tại trông chưa được đẹp lắm. Chúng ta sẽ dùng Twitter Bootstrap để style cho ứng dụng dễ dàng hơn.

Mở `app/views/layouts/application.html.erb` bằng trình soạn thảo, và trên dòng

{% highlight erb %}
<%= stylesheet_link_tag "application", media: "all", "data-turbolinks-track" => true %>
{% endhighlight %}

thêm

{% highlight erb %}
<link rel="stylesheet" href="//railsgirls.com/assets/bootstrap.css">
<link rel="stylesheet" href="//railsgirls.com/assets/bootstrap-theme.css">
{% endhighlight %}

và thay

{% highlight erb %}
<%= yield %>
{% endhighlight %}

bằng

{% highlight erb %}
<div class="container">
  <%= yield %>
</div>
{% endhighlight %}

Cùng thêm một thanh điều hướng và 'footer' vào bố cục nữa nhé. Trong cùng tập tin đang mở, thêm vào dưới `<body>`

{% highlight html %}
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">The Idea app</a>
    </div>
    <div class="collapse navbar-collapse">
      <ul class="nav navbar-nav">
        <li class="active"><a href="/ideas">Ideas</a></li>
      </ul>
    </div>
  </div>
</nav>
{% endhighlight %}

và trước `</body>`, thêm

{% highlight html %}
<footer>
  <div class="container">
    Rails Girls 2015
  </div>
</footer>
<script src="//railsgirls.com/assets/bootstrap.js"></script>
{% endhighlight %}

Bây giờ, chúng ta hãy cùng thay đổi style của bảng ideas. Mở `app/assets/stylesheets/application.css` và thêm vào phía dưới cùng:

{% highlight css %}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle; border: none; }
th { border-bottom: 1px solid #DDD; }
{% endhighlight %}

Hãy lưu các thay đổi lại và tải lại trình duyệt để xem những gì đã thay đổi. Bạn cũng có thể tiếp tục sửa HTML và CSS nếu muốn.

Trong trường hợp terminal hiển thị thông báo lỗi đại loại như có vấn đề với JavaSscript hay CoffeeScript, hãy cài đặt [nodejs](http://nodejs.org/download/). Vấn dề này không xảy ra với RailsInstaller (mà xảy ra khi bạn cài đặt Rails qua dòng lệnh `gem install rails` trên Mac và Linux)

**Huấn luyện viên**: Nói một chút về CSS và bố cục trang web.

## *4.* Thêm chức năng tải ảnh lên

Chúng ta cần cài đặt thêm 1 phần mềm để có thể tải lên tập tin trong Rails.

Mở Gemfile trong thư mục của dự án bằng trình soạn thảo và dưới dòng

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

và

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

**Huấn luyện viên**: Giải thích thư viện là gì, tại sao chúng hữu dụng. Diễn giải về phần mềm mã nguồn mở.

Nhấn `CTRL-C` trong terminal để thoát khỏi server.

Trong terminal chạy:

{% highlight sh %}
bundle
{% endhighlight %}

Bây giờ chúng ta có thể tạo các đoạn code xử lý việc upload. Trong terminal chạy:

{% highlight sh %}
rails generate uploader Picture
{% endhighlight %}

Vui lòng khởi động Rails server.

**Chú ý**: Một vài người sử dụng một cửa sổ terminal riêng để chạy Rails server liên tục. Trong trường hợp đó, Rails server **cần được khởi động lại**. Việc này là cần thiết để ứng dụng load các thư viện mới được thêm vào.

Mở `app/models/idea.rb` và dưới dòng

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

thêm

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

Mở `app/views/ideas/_form.html.erb` và đổi

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

thành

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

Thỉnh thoảng bạn sẽ gặp phải lỗi `TypeError: can’t cast ActionDispatch::Http::UploadedFile to string`.

Trong trường hợp đó, thay đổi dòng sau trong tệp tin `app/views/ideas/_form.html.erb change the line`

{% highlight erb %}
<%= form_for(@idea) do |f| %>
{% endhighlight %}

thành

{% highlight erb %}
<%= form_for @idea, :html => {:multipart => true} do |f| %>
{% endhighlight %}

Trên trình duyệt, thêm idea mới với ảnh đi kèm. Khi bạn upload một ảnh, trông nó không được đẹp lắm vì đường dẫn tới ảnh không chính xác. Hãy cùng sửa lại chỗ này.

Mở `app/views/ideas/show.html.erb` và thay

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

bằng

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}

Bây giờ hãy tải lại trình duyệt để xem những gì đã thay đổi.

**Huấn luyện viên**: Nói một chút về HTML.

## *5.* Tinh chỉnh routes

Mở http://localhost:3000 (hay địa chỉ xem trước, nếu bạn dùng một dịch vụ đám mây). Vẫn là trang "Welcome aboard". Hãy cùng chuyển hướng nó tới trang danh sách idea.

Mở `config/routes.rb` và thêm vào sau dòng đầu tiên

{% highlight ruby %}
root :to => redirect('/ideas')
{% endhighlight %}

Kiểm tra thay đổi này bằng cách mở root path (đường dẫn gốc) (là http://localhost:3000/ hay địa chỉ xem trước) trên trình duyệt.

**Huấn luyện viên**: Nói về routes, chi tiết về thứ tự sắp xếp của routes và mối liên hệ của chúng tới các tệp tin tĩnh.

## Tạo trang tĩnh cho ứng dụng

Hãy cùng thêm một trang tĩnh vào ứng dụng của chúng ta để giữ các thông tin về tác giả của ứng dụng - chính là bạn!

{% highlight sh %}
rails generate controller pages info
{% endhighlight %}

This command will create you a new folder under `app/views` called `/pages` and under that a file called `info.html.erb` which will be your info page.

Lệnh này sẽ tạo ra một thư mục mới `/pages` nằm trong thư mục `app/views` và bên trong đó là tệp tin `info.html.erb`, trang thông tin chúng ta cần.

Nó cũng thêm 1 route đơn gian vào trong `config/routes.rb`

{% highlight ruby %}
get "pages/info"
{% endhighlight %}

Bây giờ bạn có thể mở tệp tin `app/views/pages/info.html.erb` và thêm các thông tin về bạn bằng HTML. Để xem trang thông tin này, truy cập http://localhost:3000/pages/info, hoặc nếu bạn sử dụng một dịch vụ đám mây, hãy thêm '/pages/info' vào sau địa chỉ xem trước.

## *6+.* Làm gì tiếp theo?

- Thêm thiết kế sử dụng HTML & CSS
- Thêm đánh giá (rating)
- Sử dụng CoffeeScript (hay JavaScript) để thêm tương tác
- Thêm tính năng thay đổi kích thước ảnh để ảnh được tải nhanh hơn

## Giải thích các thuật ngữ

Các thuật ngữ chuyên ngành có thể khó hiểu khi xem phiển bản dịch tiếng Việt.
Thế nên một số từ vẫn được giữ nguyên gốc và được giải thích tại [từ điển thuật ngữ](/glossary)

## Các hướng dẫn bổ sung

- Guide 0: [Các cheatsheet tiện dụng cho Ruby, Rails, console etc.](https://github.com/PragTob/rails-beginner-cheatsheet)
- Guide 1: [Đẩy ứng dụng của bạn lên GitHub, Alyson La](/github)
- Guide 2: [Thêm tính năng bình luận, Janika Liiv](/commenting)
- Guide 3: [Đưa ứng dụng của bạn trực tuyến với Heroku, Terence Lee](/heroku)
- Guide 4: [Tạo thumbnail cho ảnh, Miha Filej](/thumbnails)
- Guide 5: [Thêm thiết kế với HTML & CSS, Alex Liao](/design)
- Guide 6: [Thêm tính năng xác thực với Devise, Piotr Steininger](/devise/)
- Guide 7: [Thêm ảnh đại diện với Gravatar](/gravatar)
- Guide 8: [Test ứng dụng với RSpec](/testing-rspec)
- Guide 9: [Continuous Deployment với Codeship](/continuous)
- Guide 10: [Các giải thích thêm về ứng dụng, Lucy Bain](https://github.com/lbain/railsgirls)

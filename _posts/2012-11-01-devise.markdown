---
layout: default
title: Thêm tính năng xác thực với Devise
permalink: devise
---

# Thêm tính năng xác thực với Devise

*Viết bởi Piotr Steininger, [@polishprince](https://twitter.com/polishprince)*

*Cập nhật bởi Ernesto Jimenez, [@ernesto_jimenez](https://twitter.com/ernesto_jimenez)*

** Hướng dẫn này giả định rằng bạn đã xây dựng một ứng dụng Rails Girls theo** [**hướng dẫn xây dựng ứng dụng**](/app).


## *1.* Thêm devise gem

Mở `Gemfile` và thêm

{% highlight ruby %}
gem 'devise'
{% endhighlight %}

rồi chạy

{% highlight sh %}
bundle install
{% endhighlight %}

để cài đặt gem. **Và nhớ khởi động lại server**.

## *2.* Thiết lập devise trong ứng dụng

Chạy lệnh sau trong terminal:

{% highlight sh %}
rails g devise:install
{% endhighlight %}

## *3.* Cấu hình Devise

Hãy chắc chắn bạn đã định nghĩa `default_url_options` trong các tệp tin môi trường. Mở `config/environments/development.rb` và thêm dòng sau:

{% highlight ruby %}
   config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
{% endhighlight %}

trước từ khóa `end`.

Mở `app/views/layouts/application.html.erb` và thêm:

{% highlight erb %}
<% if notice %>
  <p class="alert alert-success"><%= notice %></p>
<% end %>
<% if alert %>
  <p class="alert alert-danger"><%= alert %></p>
<% end %>
{% endhighlight %}
ngay phía trên

{% highlight erb %}
   <%= yield %>
{% endhighlight %}

Mở `app/views/ideas/show.html.erb` và xóa dòng:

{% highlight erb %}
<p id="notice"><%= notice %></p>
{% endhighlight %}

Làm tương tự với `app/views/comments/show.html.erb`. Những dòng này không còn cần thiết vì chúng ta đã đưa phần "notice" vào tệp tin `app/views/layouts/application.html.erb`.

## *4.* Thành lập User model

Chúng ta sẽ sử dụng một generator script có sẵn để khởi tạo User model.

{% highlight sh %}
   rails g devise user
   rake db:migrate
{% endhighlight %}

**Huấn luyện viên**: Giải thích về user model được khởi tạo. Các trường (fields) là gì?

## *5.* Tạo user đầu tiên

Bây giờ, khi mọi thứ đã được thiết lập xong, bạn có thể khởi tạo user đầu tiên. Devise đã tạo tất cả các đoạn code và routes cần thiết cho việc tạo tài khoản, đăng nhập, đăng xuất, v.v.

Hãy chắc chắn là server đang chạy, mở [http://localhost:3000/users/sign_up](http://localhost:3000/users/sign_up) và tạo tài khoản cho bạn.

## *6.* Thêm liên kết đăng kí và đăng nhập

Tất cả những việc cần làm bây giờ là thêm liên kết hoặc lưu ý (notice) phù hợp dựa trên tình trạng đăng nhập của người dùng vào góc trên bên phải của thanh điều hướng.

Để thực hiện, mở `app/views/layouts/application.html.erb` và thêm:

{% highlight erb %}
<p class="navbar-text pull-right">
<% if user_signed_in? %>
  Logged in as <strong><%= current_user.email %></strong>.
  <%= link_to 'Edit profile', edit_user_registration_path, :class => 'navbar-link' %> |
  <%= link_to "Logout", destroy_user_session_path, method: :delete, :class => 'navbar-link'  %>
<% else %>
  <%= link_to "Sign up", new_user_registration_path, :class => 'navbar-link'  %> |
  <%= link_to "Login", new_user_session_path, :class => 'navbar-link'  %>
<% end %>
{% endhighlight %}

vào ngay dưới

{% highlight erb %}
<ul class="nav">
  <li class="active"><a href="/ideas">Ideas</a></li>
</ul>
{% endhighlight %}

Cuối cùng, chúng ta sẽ bắt buộc người dùng phải đăng nhập nếu như họ chưa đăng nhập khi sử dụng ứng dụng. Mở `app/controllers/application_controller.rb` và thêm:

{% highlight ruby %}
  before_action :authenticate_user!
{% endhighlight %}

dưới dòng `protect_from_forgery with: :exception`.

Mở ứng dụng bằng trình duyệt và thử đăng nhập / đăng xuất.

**Huấn luyện viên**: Nói về các helper `user_signed_in?` và `current_user`. Giải thích vì sao chúng hữu ích?

## Làm gì tiếp theo?

- Thêm trường vào User model
- Thêm quan hệ  giữa `users` và `ideas`
- Chỉ cho phép user sửa những idea do mình tạo ra và xóa những comment do mình viết
- Mở rộng thêm vai trò (role) hoặc permission (sử dụng một gem ủy quyền phổ biến như CanCan)
